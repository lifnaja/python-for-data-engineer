{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python for data engineer","text":""},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre> <code>     print(\"hello world\")    </code>"},{"location":"pandas/pandas/","title":"Pandas","text":"<p>read data from json csv</p> <p>write data to json csv</p> <p>select some column</p> <p>set index</p> <p>loc iloc</p>"},{"location":"python/basic_operators/","title":"Basic Operators","text":""},{"location":"python/basic_operators/#arithmetic-operators","title":"Arithmetic Operators","text":""},{"location":"python/basic_operators/#string-format","title":"String format","text":"<ul> <li> <ul> <li> <ul> <li>/ %</li> </ul> </li> </ul> </li> </ul>"},{"location":"python/basic_python/","title":"Basic Python","text":""},{"location":"python/basic_python/#print-statment","title":"Print statment","text":"<p>\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 print \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21 <code>Hello world</code></p> <code>     print(\"hello \")    </code>"},{"location":"python/basic_python/#variables-and-types","title":"Variables and Types","text":"<p>\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07 primitive type \u00b7 Integer \u00b7 Float \u00b7 Boolean \u00b7 String</p> <code>     # Integer     a = 5     print(type(a))      # Float     b = 10.11     print(type(b))      # Boolean     d = True     print(type(d))      print(isinstance(d, bool)) </code> <code></code> <code></code> Just press 'Run'."},{"location":"python/classes_and_objects/","title":"Classes and Objects","text":"<p>Objects \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e23\u0e27\u0e1a\u0e23\u0e27\u0e21\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e40\u0e02\u0e49\u0e32\u0e44\u0e27\u0e49\u0e43\u0e19\u0e2b\u0e19\u0e48\u0e27\u0e22\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e27\u0e31\u0e15\u0e16\u0e38\u0e08\u0e30\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01 Classes \u0e0b\u0e36\u0e48\u0e07 Classes \u0e17\u0e33\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 template \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Objects</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 class \u0e41\u0e25\u0e30 object</p> <pre><code>class \u0e0a\u0e37\u0e48\u0e2d\u0e04\u0e25\u0e32\u0e2a:\n    # \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e02\u0e2d\u0e07 class (class attributes)\n    \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 = \u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\n\n    # \u0e04\u0e2d\u0e19\u0e2a\u0e15\u0e23\u0e31\u0e04\u0e40\u0e15\u0e2d\u0e23\u0e4c (constructor)\n    def __init__(self, \u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c):\n        # \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e02\u0e2d\u0e07 object (instance attributes)\n        self.\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 = \u0e04\u0e48\u0e32\n\n    # \u0e40\u0e21\u0e18\u0e2d\u0e14 (self, methods)\n    def \u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e21\u0e18\u0e2d\u0e14(self):\n        # \u0e1e\u0e24\u0e15\u0e34\u0e01\u0e23\u0e23\u0e21\u0e02\u0e2d\u0e07 object\n        pass\n</code></pre> <ul> <li><code>__init__</code> \u0e04\u0e37\u0e2d constructor \u0e43\u0e19 Python \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 method \u0e1e\u0e34\u0e40\u0e28\u0e29\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01\u0e42\u0e14\u0e22\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 object \u0e43\u0e2b\u0e21\u0e48\u0e08\u0e32\u0e01 class \u0e2b\u0e19\u0e36\u0e48\u0e07 \u0e46</li> <li><code>self</code> \u0e43\u0e19 Python, self \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e41\u0e17\u0e19\u0e02\u0e2d\u0e07 object \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 (current instance) \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e23\u0e35\u0e22\u0e01 method \u0e2b\u0e23\u0e37\u0e2d attributes \u0e02\u0e2d\u0e07 object \u0e19\u0e31\u0e49\u0e19 \u0e46</li> </ul>"},{"location":"python/classes_and_objects/#class-cat","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 Class Cat","text":"<ul> <li>\u0e21\u0e35 constructor <code>__init__</code> \u0e17\u0e35\u0e48\u0e23\u0e31\u0e1a\u0e0a\u0e37\u0e48\u0e2d (name) \u0e41\u0e25\u0e30\u0e2a\u0e35 (color) \u0e40\u0e1b\u0e47\u0e19\u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c</li> <li>\u0e21\u0e35 method meow \u0e17\u0e35\u0e48\u0e43\u0e2b\u0e49\u0e41\u0e21\u0e27\u0e23\u0e49\u0e2d\u0e07\u0e40\u0e2a\u0e35\u0e22\u0e07 \"Meow!\"</li> </ul> <pre><code>class Cat:\n    def __init__(self, name, color):\n        self.name = name  # \u0e0a\u0e37\u0e48\u0e2d\u0e41\u0e21\u0e27 (instance attribute)\n        self.color = color  # \u0e2a\u0e35\u0e02\u0e2d\u0e07\u0e41\u0e21\u0e27 (instance attribute)\n\n    def meow(self):\n        print(self.name, \"says Meow!\")\n\n    cat1 = Cat(\"Kitty\", \"Black\")\n    cat2 = Cat(\"Mittens\", \"White\")\n\n    # \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 attributes\n    print(cat1.name)\n    print(cat2.color)\n\n    # \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 method\n    cat1.meow()\n    cat2.meow()\n</code></pre>"},{"location":"python/classes_and_objects/#inheritance","title":"Inheritance","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48</p> <pre><code># \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 (Parent class)\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        print(self.name, \" makes a sound.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01 (Child class) \u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01 Animal\nclass Cat(Animal):\n    def __init__(self, name, color):\n    # \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 __init__ \u0e02\u0e2d\u0e07 Animal (superclass)\n        super().__init__(name)\n        self.color = color\n\n    def speak(self):\n        print(self.name, \" says Meow!\")\n\n# \u0e2a\u0e23\u0e49\u0e32\u0e07 object \u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01\ncat1 = Cat(\"Buddy\", \"White\")\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48\ncat1.speak()  # Buddy says Meow!\n</code></pre>"},{"location":"python/classes_and_objects/#multiple-inheritance","title":"Multiple Inheritance","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19 Python \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e23\u0e30\u0e1a\u0e38\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14 (separated by commas) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e38\u0e13\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01 (child class) \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e41\u0e25\u0e30\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07</p> <pre><code># \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 1\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        print(f\"{self.name} makes a sound.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 2\nclass Walker:\n    def walk(self):\n        print(f\"{self.name} is walking.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e17\u0e31\u0e49\u0e07 Animal \u0e41\u0e25\u0e30 Walker\nclass Dog(Animal, Walker):\n    def __init__(self, name, breed):\n        # \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 __init__ \u0e02\u0e2d\u0e07 Animal\n        super().__init__(name)\n        self.breed = breed\n\n    def speak(self):\n        print(f\"{self.name} says Woof!\")\n\n# \u0e2a\u0e23\u0e49\u0e32\u0e07 object\ndog = Dog(\"Buddy\", \"Golden Retriever\")\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48\ndog.speak()  # Buddy says Woof!\ndog.walk()   # Buddy is walking.\n</code></pre>"},{"location":"python/condition/","title":"Condition","text":"<p>if </p> <p>if  else</p> <p>if  elif else</p> <p>** \u0e21\u0e35\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48 python 3.10 switch case</p> Plain textUnordered listOrdered list <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol>"},{"location":"python/context_manager/","title":"Context Manager","text":"<p>with ....</p> <p>enter  exit</p> <p>sample with open file</p> <p>contextlib</p>"},{"location":"python/dictionaries/","title":"Dictionaries","text":""},{"location":"python/exception_handling/","title":"Exception handling","text":"<p>try except</p> <p>try except Error1 except Error2</p> <p>try except  finally</p>"},{"location":"python/function/","title":"Functions","text":"<p>def sum_two_numbers(a, b):     return a + b</p> <p>def sum_two_numbers(a: int, b: int) -&gt; int:     return a + b</p>"},{"location":"python/importing_modules/","title":"Importing Modules","text":""},{"location":"python/lists_tuples/","title":"List and Tuples","text":""},{"location":"python/lists_tuples/#list","title":"List","text":""},{"location":"python/lists_tuples/#tuples","title":"Tuples","text":""},{"location":"python/loops/","title":"Loops","text":"<p>\u0e43\u0e19 python \u0e08\u0e30\u0e21\u0e35 loops 2 \u0e41\u0e1a\u0e1a\u0e04\u0e37\u0e2d <code>while</code> \u0e41\u0e25\u0e30 <code>for</code></p>"},{"location":"python/loops/#while","title":"while","text":"<p>while \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e22\u0e31\u0e07\u0e04\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e23\u0e34\u0e07 (True) \u0e42\u0e14\u0e22\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e01\u0e31\u0e1a\u0e2a\u0e16\u0e32\u0e19\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e08\u0e33\u0e19\u0e27\u0e19\u0e23\u0e2d\u0e1a\u0e44\u0e21\u0e48\u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07  prints 0,1,2,3,4</p> <code>     # Prints out 0,1,2,3,4      count = 0     while count &lt; 5:         print(count)         count += 1  # This is the same as count = count + 1    </code>"},{"location":"python/loops/#for","title":"for","text":"<p>for \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e15\u0e32\u0e21\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17\u0e35\u0e48\u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23 (\u0e40\u0e0a\u0e48\u0e19 list, string, range)</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07  prints 0,1,2,3,4</p> <code>     # Prints out 0,1,2,3,4      for num in range(0,5):         print(num)    </code>"},{"location":"python/loops/#for-with-dictionaries","title":"for with dictionaries","text":"<p>for \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 dict \u0e44\u0e14\u0e49 \u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e40\u0e09\u0e1e\u0e32\u0e30 keys, values, \u0e2b\u0e23\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07 key-value \u0e04\u0e39\u0e48 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e15\u0e48\u0e32\u0e07 \u0e46 \u0e40\u0e0a\u0e48\u0e19 .keys(), .values(), \u0e41\u0e25\u0e30 .items()</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e40\u0e09\u0e32\u0e30 keys</p> <code>     data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}      # \u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19 keys \u0e42\u0e14\u0e22\u0e15\u0e23\u0e07     for key in data:         print(key)      # \u0e2b\u0e23\u0e37\u0e2d\u0e43\u0e0a\u0e49 .keys() \u0e01\u0e47\u0e44\u0e14\u0e49     for key in data.keys():         print(key)   </code> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e40\u0e09\u0e32\u0e30 values</p> <code>     data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}      for value in data.values():         print(value)   </code> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e17\u0e31\u0e49\u0e07 key \u0e41\u0e25\u0e30 value</p> <code>     data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}      for key, value in data.items():         print(key, value)   </code>"},{"location":"python/loops/#enumerate","title":"enumerate","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 (\u0e40\u0e0a\u0e48\u0e19 \u0e25\u0e34\u0e2a\u0e15\u0e4c, \u0e2a\u0e15\u0e23\u0e34\u0e07 \u0e2b\u0e23\u0e37\u0e2d tuple) \u0e42\u0e14\u0e22\u0e43\u0e2b\u0e49\u0e04\u0e48\u0e32\u0e14\u0e31\u0e0a\u0e19\u0e35 (index) \u0e41\u0e25\u0e30\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e2d\u0e07\u0e04\u0e4c\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e19\u0e31\u0e49\u0e19\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e19\u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33</p> <code>     fruits = ['apple', 'banana', 'cherry']      for index, fruit in enumerate(fruits):         print(index, fruit)    </code>"},{"location":"python/loops/#break-and-continue-statements","title":"\"break\" and \"continue\" statements","text":"<ul> <li>continue: \u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e02\u0e49\u0e32\u0e21\u0e44\u0e1b\u0e22\u0e31\u0e07\u0e23\u0e2d\u0e1a\u0e16\u0e31\u0e14\u0e44\u0e1b</li> <li>break: \u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e25\u0e39\u0e1b</li> </ul> <code>     fruits = ['apple', 'banana', 'cherry']      for num in range(10):         if num == 3:             continue         elif num == 6:             break          print(num)    </code>"},{"location":"python/loops/#loops-with-else","title":"loops with else","text":"<p>else \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e25\u0e39\u0e1b\u0e17\u0e33\u0e07\u0e32\u0e19\u0e04\u0e23\u0e1a\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23 break else \u0e08\u0e30\u0e44\u0e21\u0e48\u0e17\u0e33\u0e07\u0e32\u0e19 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 break \u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e25\u0e39\u0e1b\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e1a</p> <code>     numbers = [1, 2, 3, 4, 5]     target = 7      for num in numbers:         if num == target:             print(\"\u0e1e\u0e1a\u0e04\u0e48\u0e32 \", target)             break     else:         print(\"\u0e44\u0e21\u0e48\u0e1e\u0e1a\u0e04\u0e48\u0e32 \", target)    </code>"},{"location":"python/unit_test/","title":"Unit test","text":""}]}