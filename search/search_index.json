{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python for data engineer","text":"<code>     print(\"hello world\")   </code>"},{"location":"pandas/intro_pandas/","title":"Pandas","text":"<p>Pandas \u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e07\u0e48\u0e32\u0e22\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 Python \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e32\u0e23\u0e32\u0e07\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e30\u0e2b\u0e4c\u0e17\u0e35\u0e48\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e22\u0e37\u0e14\u0e2b\u0e22\u0e38\u0e48\u0e19\u0e2a\u0e39\u0e07</p> <p>DataFrame \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e2d\u0e07\u0e21\u0e34\u0e15\u0e34\u0e17\u0e35\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e43\u0e19\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c \u0e04\u0e25\u0e49\u0e32\u0e22\u0e01\u0e31\u0e1a spreadsheet, table \u0e43\u0e19 sql</p> <p></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 datafame \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 dict key \u0e02\u0e2d\u0e07 dict \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e37\u0e48\u0e2d column \u0e41\u0e25\u0e30 values \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 list \u0e08\u0e30\u0e40\u0e1b\u0e47\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 columns</p> <pre><code>import pandas as pd\n\ndata = {\n    'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eva'],\n    'Age': [25, 30, 35, 40, 45],\n    'City': ['New York', 'Los Angeles', 'Chicago', 'San Francisco', 'Houston'],\n    'Salary': [50000, 60000, 70000, 75000, 67000],\n    'Experience': [5, 7, 10, 12, 7],\n}\n\ndf = pd.DataFrame(data)\n\nprint(df)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 type \u0e02\u0e2d\u0e07 colume\nprint(df.dtypes)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 dimensional \u0e02\u0e2d\u0e07 dataframe\nprint(df.shape)\n\n# \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 dataframe \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07 index dtypes \u0e41\u0e25\u0e30 memory usage.\nprint(df.info(verbose=True))\n\n# \u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e04\u0e2d\u0e25\u0e31\u0e21\u0e19\u0e4c\nprint(df['Name'])\n\n# filter \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e2d\u0e32\u0e22\u0e38\u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 30\nprint(df[df['Age'] &gt; 30])\n\n# \u0e04\u0e33\u0e19\u0e27\u0e13\u0e2d\u0e32\u0e22\u0e38\u0e40\u0e09\u0e25\u0e35\u0e48\u0e22\naverage_age = df['Age'].mean()\nprint(average_age)\n\n# \u0e2b\u0e32\u0e04\u0e48\u0e32 max \u0e02\u0e2d\u0e07 salary\nmax_salary = df['Salary'].max()\nprint(max_salary)\n</code></pre>"},{"location":"pandas/plots_in_pandas/","title":"Plot int Pandas","text":"<p>\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 air quality no2</p> <p>\u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c data_quality.csv</p> <pre><code>import pandas as pd\nimport matplotlib.pyplot as plt\n\nair_quality = pd.read_csv(\"data/air_quality_no2.csv\", index_col=0, parse_dates=True)\n</code></pre> <p>\u0e2a\u0e23\u0e49\u0e32\u0e07 \u0e01\u0e23\u0e32\u0e1f\u0e08\u0e32\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <pre><code>air_quality.plot()\nplt.show()\n</code></pre></p> <p></p> <p>\u0e16\u0e49\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23 filter \u0e14\u0e39\u0e15\u0e32\u0e21\u0e1a\u0e32\u0e07 columns <pre><code>air_quality[\"station_paris\"].plot()\nplt.show()\n</code></pre></p> <p></p>"},{"location":"pandas/read_and_write_tabular_data/","title":"Read and Write tabular data","text":"<p>pandas \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e19\u0e33\u0e21\u0e32\u0e27\u0e34\u0e40\u0e04\u0e23\u0e32\u0e2b\u0e4c</p> <p></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 csv</p> <pre><code>titanic = pd.read_csv(\"data/titanic.csv\")\n</code></pre> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e40\u0e02\u0e31\u0e22\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 dataframe \u0e40\u0e1b\u0e47\u0e19 csv <pre><code>titanic.to_csv(\"file_name.csv\")\n</code></pre></p>"},{"location":"pandas/select_subset_data/","title":"Select Subset data","text":"<p>\u0e43\u0e19\u0e2a\u0e48\u0e27\u0e19\u0e19\u0e35\u0e49\u0e08\u0e30\u0e43\u0e0a\u0e49\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01 titanic data</p>"},{"location":"pandas/select_subset_data/#select-columns","title":"Select columns","text":"<pre><code>import pandas as pd\ntitanic = pd.read_csv(\"data/titanic.csv\")\n\nages = titanic[\"Age\"]\n</code></pre>"},{"location":"pandas/select_subset_data/#select-multiple-columns","title":"Select multiple columns","text":"<pre><code>age_sex = titanic[[\"Age\", \"Sex\"]]\n</code></pre>"},{"location":"pandas/select_subset_data/#filter-rows","title":"Filter rows","text":"<p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e01\u0e32\u0e23 filter \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48 <code>age</code> &gt; 35 <pre><code>age_above_35 = titanic[titanic[\"Age\"] &gt; 35]\n</code></pre></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23 filter \u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 rows \u0e2b\u0e25\u0e32\u0e22\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02 <pre><code>class_2_3 = titanic[(titanic[\"Pclass\"] == 2) | (titanic[\"Pclass\"] == 3)]\n\n# \u0e2b\u0e23\u0e37\u0e2d\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e23\u0e27\u0e21 2 condition \u0e44\u0e14\u0e49\u0e41\u0e1a\u0e1a\u0e19\u0e35\u0e49\nclass_2_3 = titanic[titanic[\"Pclass\"].isin([2, 3])]\n</code></pre></p>"},{"location":"pandas/select_subset_data/#select-specific-rows-and-columns","title":"Select specific rows and columns","text":"<p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e01\u0e32\u0e23\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 <code>Name</code> \u0e17\u0e35\u0e48 <code>Age</code> \u0e21\u0e32\u0e01\u0e01\u0e27\u0e48\u0e32 35 <pre><code>adult_names = titanic.loc[titanic[\"Age\"] &gt; 35, \"Name\"]\n</code></pre></p>"},{"location":"python/basic_operators/","title":"Basic Operators","text":""},{"location":"python/basic_operators/#arithmetic-operators","title":"Arithmetic Operators","text":"<p>\u0e43\u0e19 python \u0e21\u0e35\u0e15\u0e31\u0e27\u0e14\u0e33\u0e40\u0e19\u0e34\u0e19\u0e01\u0e32\u0e23\u0e1a\u0e27\u0e01 \u0e25\u0e1a \u0e04\u0e39\u0e13 \u0e41\u0e25\u0e30\u0e2b\u0e32\u0e23 \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e44\u0e14\u0e49</p> <pre><code>number = 1 + 2 * 3 / 4.0\nprint(number)\n</code></pre>"},{"location":"python/basic_operators/#another-operator","title":"Another operator","text":"<ul> <li>modulo operator (%)</li> </ul> <pre><code>number = 9 % 3\nprint(number)\n\nnumber = 7 % 3\nprint(number)\n</code></pre> <ul> <li>power operator (**)</li> </ul> <pre><code>squared = 7 ** 2\ncubed = 2 ** 3\nprint(squared)\nprint(cubed)\n</code></pre> <ul> <li>floor division (//)</li> </ul> <pre><code>num = 7 // 2\nprint(num)\n</code></pre>"},{"location":"python/basic_operators/#string-operators","title":"String Operators","text":"<ul> <li>Concatenation</li> </ul> <pre><code>str1 = \"Hello\"\nstr2 = \"World\"\nresult = str1 + \" \" + str2\n\nprint(result)\n# f-string\n\na = 10\nb = 20\nresult = f\"The sum of {a} and {b} is {a + b}.\"\nprint(result)\n</code></pre>"},{"location":"python/basic_python/","title":"Basic Python","text":""},{"location":"python/basic_python/#print-statment","title":"Print statment","text":"<p>\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 print \u0e41\u0e2a\u0e14\u0e07\u0e02\u0e49\u0e2d\u0e04\u0e27\u0e32\u0e21 <code>Hello world</code></p> <code>     print(\"hello \")    </code>"},{"location":"python/basic_python/#variables-and-types","title":"Variables and Types","text":"<p>\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07 primitive type</p> <ul> <li>Integer</li> <li>Float</li> <li>Boolean</li> <li>String</li> </ul> <code>     # Integer     a = 5     print(type(a))     print(isinstance(a, int))      # Float     b = 10.11     print(type(b))      # Boolean     c = True     print(type(c))      # String     d = \"Hello\"     print(type(d)) </code> <code></code> <code></code> Just press 'Run'."},{"location":"python/classes_and_objects/","title":"Classes and Objects","text":"<p>Objects \u0e04\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e23\u0e27\u0e1a\u0e23\u0e27\u0e21\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e40\u0e02\u0e49\u0e32\u0e44\u0e27\u0e49\u0e43\u0e19\u0e2b\u0e19\u0e48\u0e27\u0e22\u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19 \u0e27\u0e31\u0e15\u0e16\u0e38\u0e08\u0e30\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e41\u0e25\u0e30\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e21\u0e32\u0e08\u0e32\u0e01 Classes \u0e0b\u0e36\u0e48\u0e07 Classes \u0e17\u0e33\u0e2b\u0e19\u0e49\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19 template \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Objects</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 class \u0e41\u0e25\u0e30 object</p> <pre><code>class \u0e0a\u0e37\u0e48\u0e2d\u0e04\u0e25\u0e32\u0e2a:\n    # \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e02\u0e2d\u0e07 class (class attributes)\n    \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 = \u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\n\n    # \u0e04\u0e2d\u0e19\u0e2a\u0e15\u0e23\u0e31\u0e04\u0e40\u0e15\u0e2d\u0e23\u0e4c (constructor)\n    def __init__(self, \u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c):\n        # \u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23\u0e02\u0e2d\u0e07 object (instance attributes)\n        self.\u0e15\u0e31\u0e27\u0e41\u0e1b\u0e23 = \u0e04\u0e48\u0e32\n\n    # \u0e40\u0e21\u0e18\u0e2d\u0e14 (self, methods)\n    def \u0e0a\u0e37\u0e48\u0e2d\u0e40\u0e21\u0e18\u0e2d\u0e14(self):\n        # \u0e1e\u0e24\u0e15\u0e34\u0e01\u0e23\u0e23\u0e21\u0e02\u0e2d\u0e07 object\n        pass\n</code></pre> <ul> <li><code>__init__</code> \u0e04\u0e37\u0e2d constructor \u0e43\u0e19 Python \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19 method \u0e1e\u0e34\u0e40\u0e28\u0e29\u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e40\u0e23\u0e35\u0e22\u0e01\u0e42\u0e14\u0e22\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 object \u0e43\u0e2b\u0e21\u0e48\u0e08\u0e32\u0e01 class \u0e2b\u0e19\u0e36\u0e48\u0e07 \u0e46</li> <li><code>self</code> \u0e43\u0e19 Python, self \u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e41\u0e17\u0e19\u0e02\u0e2d\u0e07 object \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19 (current instance) \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e23\u0e35\u0e22\u0e01 method \u0e2b\u0e23\u0e37\u0e2d attributes \u0e02\u0e2d\u0e07 object \u0e19\u0e31\u0e49\u0e19 \u0e46</li> </ul>"},{"location":"python/classes_and_objects/#class-cat","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 Class Cat","text":"<ul> <li>\u0e21\u0e35 constructor <code>__init__</code> \u0e17\u0e35\u0e48\u0e23\u0e31\u0e1a\u0e0a\u0e37\u0e48\u0e2d (name) \u0e41\u0e25\u0e30\u0e2a\u0e35 (color) \u0e40\u0e1b\u0e47\u0e19\u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c</li> <li>\u0e21\u0e35 method meow \u0e17\u0e35\u0e48\u0e43\u0e2b\u0e49\u0e41\u0e21\u0e27\u0e23\u0e49\u0e2d\u0e07\u0e40\u0e2a\u0e35\u0e22\u0e07 \"Meow!\"</li> </ul> <pre><code>class Cat:\n    def __init__(self, name, color):\n        self.name = name  # \u0e0a\u0e37\u0e48\u0e2d\u0e41\u0e21\u0e27 (instance attribute)\n        self.color = color  # \u0e2a\u0e35\u0e02\u0e2d\u0e07\u0e41\u0e21\u0e27 (instance attribute)\n\n    def meow(self):\n        print(self.name, \"says Meow!\")\n\n\ncat1 = Cat(\"Kitty\", \"Black\")\ncat2 = Cat(\"Mittens\", \"White\")\n\n# \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 attributes\nprint(cat1.name)\nprint(cat2.color)\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 method\ncat1.meow()\ncat2.meow()\n</code></pre>"},{"location":"python/classes_and_objects/#inheritance","title":"Inheritance","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48</p> <pre><code># \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 (Parent class)\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        print(self.name, \" makes a sound.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01 (Child class) \u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01 Animal\nclass Cat(Animal):\n    def __init__(self, name, color):\n    # \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 __init__ \u0e02\u0e2d\u0e07 Animal (superclass)\n        super().__init__(name)\n        self.color = color\n\n    def speak(self):\n        print(self.name, \" says Meow!\")\n\n# \u0e2a\u0e23\u0e49\u0e32\u0e07 object \u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01\ncat1 = Cat(\"Buddy\", \"White\")\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48\ncat1.speak()  # Buddy says Meow!\n</code></pre>"},{"location":"python/classes_and_objects/#multiple-inheritance","title":"Multiple Inheritance","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19 Python \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e17\u0e33\u0e44\u0e14\u0e49\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23\u0e23\u0e30\u0e1a\u0e38\u0e2b\u0e25\u0e32\u0e22\u0e04\u0e25\u0e32\u0e2a\u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14 (separated by commas) \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e38\u0e13\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01 (child class) \u0e0b\u0e36\u0e48\u0e07\u0e08\u0e30\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e41\u0e25\u0e30\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e04\u0e25\u0e32\u0e2a\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07</p> <pre><code># \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 1\nclass Animal:\n    def __init__(self, name):\n        self.name = name\n\n    def speak(self):\n        print(f\"{self.name} makes a sound.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48 2\nclass Walker:\n    def walk(self):\n        print(f\"{self.name} is walking.\")\n\n# \u0e04\u0e25\u0e32\u0e2a\u0e25\u0e39\u0e01\u0e17\u0e35\u0e48\u0e2a\u0e37\u0e1a\u0e17\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e17\u0e31\u0e49\u0e07 Animal \u0e41\u0e25\u0e30 Walker\nclass Dog(Animal, Walker):\n    def __init__(self, name, breed):\n        # \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49 __init__ \u0e02\u0e2d\u0e07 Animal\n        super().__init__(name)\n        self.breed = breed\n\n    def speak(self):\n        print(f\"{self.name} says Woof!\")\n\n# \u0e2a\u0e23\u0e49\u0e32\u0e07 object\ndog = Dog(\"Buddy\", \"Golden Retriever\")\n\n# \u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e08\u0e32\u0e01\u0e17\u0e31\u0e49\u0e07\u0e2a\u0e2d\u0e07\u0e04\u0e25\u0e32\u0e2a\u0e41\u0e21\u0e48\ndog.speak()  # Buddy says Woof!\ndog.walk()   # Buddy is walking.\n</code></pre>"},{"location":"python/condition/","title":"Condition","text":"<p>\u0e43\u0e19 Python, Condition  \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e04\u0e48\u0e32\u0e41\u0e25\u0e30\u0e15\u0e31\u0e14\u0e2a\u0e34\u0e19\u0e43\u0e08\u0e27\u0e48\u0e32\u0e08\u0e30\u0e17\u0e33\u0e2d\u0e30\u0e44\u0e23\u0e43\u0e19\u0e01\u0e23\u0e13\u0e35\u0e15\u0e48\u0e32\u0e07 \u0e46 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 \u0e40\u0e0a\u0e48\u0e19 if, elif, \u0e41\u0e25\u0e30 else</p>"},{"location":"python/condition/#if","title":"IF","text":"<pre><code>x = 10\nif x &gt; 5:\n    print(\"x is greater than 5\")\n</code></pre>"},{"location":"python/condition/#if-else","title":"IF ELSE","text":"<pre><code>x = 10\nif x &gt; 5:\n    print(\"x is greater than 5\")\nelse\n    print(\"x is less than 5\")\n</code></pre>"},{"location":"python/condition/#if-elif-else","title":"IF ELIF ELSE","text":"<pre><code>x = 7\nif x &gt; 10:\n    print(\"x is greater than 10\")\nelif x &gt; 5:\n    print(\"x is greater than 5 but less than or equal to 10\")\nelse:\n    print(\"x is 5 or less\")\n</code></pre>"},{"location":"python/condition/#and-or-not","title":"And-Or-Not","text":"<pre><code>x = 7\ny = 10\n\n# \u0e43\u0e0a\u0e49 `and`:\nif x &gt; 5 and y &gt; 5:\n    print(\"Both x and y are greater than 5\")\n\n# \u0e43\u0e0a\u0e49 `or`:\nif x &gt; 5 or y &gt; 15:\n    print(\"At least one of x or y is greater than 5\")\n\n# \u0e43\u0e0a\u0e49 `not`:\nif not x &gt; 10:\n    print(\"x is not greater than 10\")\n</code></pre>"},{"location":"python/context_manager/","title":"Context Manager","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e32\u0e01\u0e23\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e40\u0e0a\u0e48\u0e19 \u0e44\u0e1f\u0e25\u0e4c \u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e15\u0e48\u0e2d\u0e10\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e2b\u0e23\u0e37\u0e2d\u0e01\u0e32\u0e23\u0e25\u0e47\u0e2d\u0e01 \u0e44\u0e14\u0e49\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e07\u0e27\u0e25\u0e27\u0e48\u0e32\u0e08\u0e30\u0e25\u0e37\u0e21\u0e1b\u0e25\u0e48\u0e2d\u0e22\u0e17\u0e23\u0e31\u0e1e\u0e22\u0e32\u0e01\u0e23\u0e40\u0e2b\u0e25\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e2a\u0e34\u0e49\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e44\u0e1f\u0e25\u0e4c \u0e41\u0e1a\u0e1a\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e49 context manager</p> <pre><code>file = open(\"my_file.txt\", \"r\")\n\n# \u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e32\u0e01\u0e44\u0e1f\u0e25\u0e4c\ndata = file.read()\n\n# \u0e17\u0e33\u0e07\u0e32\u0e19\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nprint(data)\n\n# \u0e1b\u0e34\u0e14\u0e44\u0e1f\u0e25\u0e4c\nfile.close()\n</code></pre> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e44\u0e1f\u0e25\u0e4c \u0e41\u0e1a\u0e1a\u0e43\u0e0a\u0e49 context manager <pre><code>with open(\"my_file.txt\", \"r\") as file:\n    data = file.read()\n    print(data)\n</code></pre></p>"},{"location":"python/dictionaries/","title":"Dictionaries","text":"<p>\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e04\u0e39\u0e48\u0e02\u0e2d\u0e07 key \u0e41\u0e25\u0e30 value \u0e0b\u0e36\u0e48\u0e07 key \u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 value \u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e32\u0e22\u0e0a\u0e19\u0e34\u0e14\u0e44\u0e14\u0e49 (heterogeneous) \u0e41\u0e25\u0e30 key \u0e08\u0e30\u0e15\u0e49\u0e2d\u0e07\u0e44\u0e21\u0e48\u0e0b\u0e49\u0e33\u0e01\u0e31\u0e19</p> <p>key : \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1b\u0e47\u0e19\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e32\u0e22\u0e0a\u0e19\u0e34\u0e14: \u0e40\u0e0a\u0e48\u0e19 string, int, float, tuple value: \u0e04\u0e48\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1b\u0e47\u0e19\u0e0a\u0e19\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2d\u0e30\u0e44\u0e23\u0e01\u0e47\u0e44\u0e14\u0e49</p>"},{"location":"python/dictionaries/#dict","title":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 dict","text":"<pre><code>my_dict = {\"name\": \"Alice\", \"age\": 30, \"city\": \"Bangkok\"}\nprint(my_dict)\n</code></pre>"},{"location":"python/dictionaries/#key","title":"\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e04\u0e48\u0e32\u0e08\u0e32\u0e01 key","text":"<pre><code>my_dict = {\"name\": \"Alice\", \"age\": 30, \"city\": \"Bangkok\"}\nprint(my_dict[\"name\"])\nprint(my_dict[\"age\"])\n</code></pre> <p>\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 get() \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07 value (\u0e16\u0e49\u0e32 key \u0e44\u0e21\u0e48\u0e21\u0e35\u0e08\u0e30\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32 None \u0e2b\u0e23\u0e37\u0e2d\u0e04\u0e48\u0e32\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14) <pre><code>my_dict = {\"name\": \"Alice\", \"age\": 30, \"city\": \"Bangkok\"}\nprint(my_dict.get(\"city\"))\nprint(my_dict.get(\"country\", \"Unknown\"))\n</code></pre></p> <p>\u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e44\u0e02\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e01\u0e32\u0e23\u0e25\u0e1a \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 pop <pre><code># \u0e01\u0e32\u0e23\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nmy_dict[\"country\"] = \"USA\"\nprint(my_dict)\n\n# \u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e44\u0e02\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nmy_dict[\"age\"] = 26\nprint(my_dict)\n\n# \u0e01\u0e32\u0e23\u0e25\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\ndel my_dict[\"city\"]\nprint(my_dict)\n\n# \u0e43\u0e0a\u0e49 pop() \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e25\u0e1a\u0e41\u0e25\u0e30\u0e04\u0e37\u0e19\u0e04\u0e48\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\nage = my_dict.pop(\"age\")\nprint(age)\nprint(my_dict)\n</code></pre></p>"},{"location":"python/exception_handling/","title":"Exception handling","text":"<p>\u0e01\u0e32\u0e23\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e17\u0e35\u0e48\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19\u0e43\u0e19\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e17\u0e33\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e2b\u0e22\u0e38\u0e14\u0e17\u0e33\u0e07\u0e32\u0e19\u0e17\u0e31\u0e19\u0e17\u0e35 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 (exception) \u0e02\u0e36\u0e49\u0e19 \u0e40\u0e0a\u0e48\u0e19 \u0e01\u0e32\u0e23\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 try except <pre><code>try:\n    x = 0\n    y = 10 / x\n    print(y)\nexcept ZeroDivisionError:\n    print(\"\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49\")\n</code></pre></p> <p>\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49 except \u0e2b\u0e25\u0e32\u0e22\u0e46 \u0e2d\u0e31\u0e19 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23\u0e01\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14 \u0e2b\u0e25\u0e32\u0e22\u0e46 \u0e41\u0e1a\u0e1a\u0e44\u0e14\u0e49 <pre><code>try:\n    x = \"0\"\n    y = 10 / x\n    print(y)\nexcept ZeroDivisionError:\n    print(\"\u0e04\u0e38\u0e13\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49\")\nexcept TypeError:\n    print(\"\u0e15\u0e31\u0e27\u0e2b\u0e32\u0e23\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\u0e40\u0e17\u0e48\u0e32\u0e19\u0e31\u0e49\u0e19\")\n</code></pre></p> <p>?? \u0e16\u0e49\u0e32\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e04\u0e48\u0e32 `x \u0e40\u0e1b\u0e47\u0e19 True \u0e08\u0e30\u0e40\u0e01\u0e34\u0e14 exception \u0e2d\u0e30\u0e44\u0e23 </p>"},{"location":"python/exception_handling/#else-finally","title":"else, finally","text":"<ul> <li>else: \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e42\u0e04\u0e49\u0e14\u0e43\u0e19 try \u0e44\u0e21\u0e48\u0e21\u0e35\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e40\u0e01\u0e34\u0e14\u0e02\u0e36\u0e49\u0e19</li> <li>finally: \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19\u0e40\u0e2a\u0e21\u0e2d\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01 try \u0e2b\u0e23\u0e37\u0e2d except \u0e44\u0e21\u0e48\u0e27\u0e48\u0e32\u0e08\u0e30\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e2b\u0e23\u0e37\u0e2d\u0e44\u0e21\u0e48</li> </ul> <pre><code>try:\n    num1 = 10\n    num2 = 2\n    result = num1 / num2\nexcept ZeroDivisionError:\n    print(\"\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49.\")\nelse:\n    print(f\"\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: {result}\")\nfinally:\n    print(\"\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e40\u0e2a\u0e23\u0e47\u0e08\u0e2a\u0e34\u0e49\u0e19.\")\n</code></pre>"},{"location":"python/exception_handling/#custom-exception","title":"Custom Exception","text":"<p>\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2a\u0e23\u0e49\u0e32\u0e07 exception \u0e02\u0e2d\u0e07\u0e15\u0e31\u0e27\u0e40\u0e2d\u0e07\u0e42\u0e14\u0e22\u0e01\u0e32\u0e23 extend \u0e08\u0e32\u0e01 Exception class <pre><code>class CustomException(Exception):\n    pass\n\ntry:\n    raise CustomException(\"\u0e40\u0e01\u0e34\u0e14\u0e02\u0e49\u0e2d\u0e1c\u0e34\u0e14\u0e1e\u0e25\u0e32\u0e14\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e40\u0e2d\u0e07.\")\nexcept CustomException as e:\n    print(f\"Caught an error: {e}\")\n</code></pre></p>"},{"location":"python/function/","title":"Functions","text":"<p>Functions \u0e40\u0e1b\u0e47\u0e19\u0e27\u0e34\u0e18\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e30\u0e14\u0e27\u0e01\u0e43\u0e19\u0e01\u0e32\u0e23\u0e41\u0e1a\u0e48\u0e07\u0e42\u0e04\u0e49\u0e14 \u0e2d\u0e2d\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e25\u0e47\u0e2d\u0e01 \u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e08\u0e31\u0e14\u0e23\u0e30\u0e40\u0e1a\u0e35\u0e22\u0e1a\u0e42\u0e04\u0e49\u0e14 \u0e17\u0e33\u0e43\u0e2b\u0e49\u0e42\u0e04\u0e49\u0e14\u0e2d\u0e48\u0e32\u0e19\u0e07\u0e48\u0e32\u0e22\u0e02\u0e36\u0e49\u0e19 \u0e43\u0e0a\u0e49\u0e0b\u0e49\u0e33\u0e44\u0e14\u0e49</p>"},{"location":"python/function/#function","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Function","text":"<p>\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e43\u0e0a\u0e49\u0e04\u0e33\u0e2a\u0e31\u0e48\u0e07 <code>def</code> \u0e15\u0e32\u0e21\u0e14\u0e49\u0e27\u0e22\u0e0a\u0e37\u0e48\u0e2d\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e41\u0e25\u0e30\u0e27\u0e07\u0e40\u0e25\u0e47\u0e1a () \u0e40\u0e0a\u0e48\u0e19</p> math_operations.py<pre><code>def sum_two_numbers(a, b):\n    return a + b\n\nsum_two_numbers(1, 3)\n</code></pre> math_operations.py<pre><code>def sum_two_numbers(a: int, b: int) -&gt; int:\n    return a + b\n\nsum_two_numbers(1, 3)\n</code></pre>"},{"location":"python/function/#function-default-parameters","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Function \u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19 (Default Parameters)","text":"math_operations.py<pre><code>def sum_two_numbers(a: int, b: int = 0) -&gt; int:\n    return a + b\n\nsum_two_numbers(1)\n</code></pre>"},{"location":"python/function/#arguments","title":"\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e44\u0e21\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e08\u0e33\u0e19\u0e27\u0e19 Arguments","text":"<p>Python \u0e23\u0e2d\u0e07\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e2a\u0e48\u0e07 arguments \u0e41\u0e1a\u0e1a\u0e44\u0e21\u0e48\u0e08\u0e33\u0e01\u0e31\u0e14\u0e08\u0e33\u0e19\u0e27\u0e19\u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49  - <code>*args</code>  (Arguments)  - <code>**kwargs</code> (Keyword Arguments) \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e23\u0e31\u0e1a\u0e04\u0e48\u0e32\u0e1e\u0e32\u0e23\u0e32\u0e21\u0e34\u0e40\u0e15\u0e2d\u0e23\u0e4c\u0e43\u0e19\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a key-value \u0e08\u0e33\u0e19\u0e27\u0e19\u0e44\u0e21\u0e48\u0e08\u0e33\u0e01\u0e31\u0e14\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e35\u0e22\u0e01\u0e43\u0e0a\u0e49\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19</p> <pre><code>def add_all(*args):\n    return sum(args)\n\ndef print_info(**kwargs):\n    for key, value in kwargs.items():\n        print(f\"{key}: {value}\")\n\nprint(add_all(1, 2, 3, 4))\n\nprint(name=\"Alice\", age=25, city=\"Bangkok\")\n</code></pre> <p>\u0e2b\u0e32\u0e01\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e23\u0e31\u0e1a args \u0e41\u0e25\u0e30 *kwargs \u0e15\u0e49\u0e2d\u0e07\u0e08\u0e31\u0e14\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49: <pre><code>def func(positional_args, *args, **kwargs)\n    pass\n</code></pre></p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 <pre><code>def example_function(a, b, *args, **kwargs):\n    print(f\"a: {a}, b: {b}\")\n    print(f\"args: {args}\")\n    print(f\"kwargs: {kwargs}\")\n\nexample_function(1, 2, 3, 4, name=\"Alice\", age=25)\n</code></pre></p>"},{"location":"python/importing_modules/","title":"Importing Modules","text":"<p>\u0e42\u0e21\u0e14\u0e39\u0e25\u0e43\u0e19 Python \u0e04\u0e37\u0e2d\u0e44\u0e1f\u0e25\u0e4c python \u0e17\u0e35\u0e48\u0e21\u0e35\u0e19\u0e32\u0e21\u0e2a\u0e01\u0e38\u0e25 .py \u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07\u0e42\u0e21\u0e14\u0e39\u0e25\u0e08\u0e30\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e01\u0e31\u0e1a\u0e0a\u0e37\u0e48\u0e2d\u0e44\u0e1f\u0e25\u0e4c\u0e19\u0e31\u0e49\u0e19 \u0e46 \u0e42\u0e14\u0e22\u0e43\u0e19\u0e42\u0e21\u0e14\u0e39\u0e25 Python \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e21\u0e35 functions, classes, \u0e2b\u0e23\u0e37\u0e2d variables \u0e17\u0e35\u0e48\u0e16\u0e39\u0e01\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e41\u0e25\u0e30\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e44\u0e14\u0e49\u0e20\u0e32\u0e22\u0e43\u0e19\u0e44\u0e1f\u0e25\u0e4c\u0e19\u0e31\u0e49\u0e19.</p> <p>The example above includes two files: \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 \u0e08\u0e30\u0e21\u0e35 python 2 \u0e44\u0e1f\u0e25\u0e4c</p> <pre><code>project/\n\u251c\u2500\u2500 math_operations.py\n\u251c\u2500\u2500 main.py\n</code></pre> math_operations.py<pre><code>def add(a: int, b: int) -&gt; int:\n    return a + b\n\ndef subtract(a: int, b: int) -&gt; int:\n    return a - b\n</code></pre> main.py<pre><code>import math_operations\n\nresult = math_operations.add(5, 3)\nprint(result)\n</code></pre>"},{"location":"python/lists_tuples/","title":"List and Tuples","text":"<p>List \u0e41\u0e25\u0e30 Tuple \u0e40\u0e1b\u0e47\u0e19\u0e42\u0e04\u0e23\u0e07\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e0a\u0e19\u0e34\u0e14\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e43\u0e19 Python \u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2b\u0e25\u0e32\u0e22\u0e46 \u0e04\u0e48\u0e32\u0e44\u0e27\u0e49\u0e14\u0e49\u0e27\u0e22\u0e01\u0e31\u0e19 \u0e41\u0e15\u0e48\u0e21\u0e35\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34\u0e17\u0e35\u0e48\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e01\u0e31\u0e19</p>"},{"location":"python/lists_tuples/#list","title":"List","text":"<ul> <li>\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07: List \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1e\u0e34\u0e48\u0e21 \u0e25\u0e1a \u0e2b\u0e23\u0e37\u0e2d\u0e41\u0e01\u0e49\u0e44\u0e02\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e20\u0e32\u0e22\u0e43\u0e19\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e25\u0e49\u0e27 \u0e17\u0e33\u0e43\u0e2b\u0e49 List \u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e22\u0e37\u0e14\u0e2b\u0e22\u0e38\u0e48\u0e19\u0e43\u0e19\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19</li> <li>\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28: \u0e43\u0e0a\u0e49\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e27\u0e07\u0e40\u0e25\u0e47\u0e1a\u0e40\u0e2b\u0e25\u0e35\u0e48\u0e22\u0e21 [] \u0e43\u0e19\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28</li> <li>\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25: \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 List \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 index (\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e17\u0e35\u0e48 0)</li> </ul> <pre><code>my_list = [1, 2, 3, 4, 5]  # List \u0e17\u0e35\u0e48\u0e40\u0e01\u0e47\u0e1a\u0e15\u0e31\u0e27\u0e40\u0e25\u0e02\nmixed_list = [1, \"Python\", 3.14, True]  # List \u0e17\u0e35\u0e48\u0e40\u0e01\u0e47\u0e1a\u0e04\u0e48\u0e32\u0e2b\u0e25\u0e32\u0e22\u0e0a\u0e19\u0e34\u0e14\n\n# \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e04\u0e48\u0e32\u0e43\u0e19 List\nprint(my_list[0])\nprint(my_list[-1])\n\n# \u0e41\u0e01\u0e49\u0e44\u0e02\u0e04\u0e48\u0e32\nmy_list[1] = 10\nprint(my_list)\n\n# \u0e40\u0e1e\u0e34\u0e48\u0e21\u0e04\u0e48\u0e32\nmy_list.append(6)\nprint(my_list)\n\n# \u0e25\u0e1a\u0e04\u0e48\u0e32\nmy_list.remove(10)\nprint(my_list)\n\n# \u0e22\u0e32\u0e27\u0e02\u0e2d\u0e07 List\nprint(len(my_list))\n</code></pre>"},{"location":"python/lists_tuples/#tuples","title":"Tuples","text":"<ul> <li>\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07: Tuple \u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e20\u0e32\u0e22\u0e43\u0e19\u0e44\u0e14\u0e49\u0e2b\u0e25\u0e31\u0e07\u0e08\u0e32\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e25\u0e49\u0e27 \u0e17\u0e33\u0e43\u0e2b\u0e49 Tuple \u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u0e41\u0e25\u0e30\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e40\u0e01\u0e47\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e43\u0e2b\u0e49\u0e21\u0e35\u0e01\u0e32\u0e23\u0e41\u0e01\u0e49\u0e44\u0e02</li> <li>\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28: \u0e43\u0e0a\u0e49\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e2b\u0e21\u0e32\u0e22\u0e27\u0e07\u0e40\u0e25\u0e47\u0e1a\u0e1b\u0e35\u0e01\u0e01\u0e32 () \u0e43\u0e19\u0e01\u0e32\u0e23\u0e1b\u0e23\u0e30\u0e01\u0e32\u0e28</li> <li>\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25: \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e43\u0e19 List \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 index (\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e17\u0e35\u0e48 0)</li> </ul> <pre><code>my_tuple = (1, 2, 3, \"hello\", 5.5)\n\n# \u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e43\u0e19 Tuple \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e14\u0e31\u0e0a\u0e19\u0e35\nprint(my_tuple[0])\n\nempty_tuple = ()\n\n# \u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Tuple \u0e17\u0e35\u0e48\u0e21\u0e35\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e15\u0e31\u0e27\u0e40\u0e14\u0e35\u0e22\u0e27\nsingle_item_tuple = (1,)\nprint(single_item_tuple)\n</code></pre>"},{"location":"python/lists_tuples/#list-tuple","title":"\u0e2a\u0e23\u0e38\u0e1b\u0e04\u0e27\u0e32\u0e21\u0e41\u0e15\u0e01\u0e15\u0e48\u0e32\u0e07\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 List \u0e41\u0e25\u0e30 Tuple","text":"\u0e04\u0e38\u0e13\u0e2a\u0e21\u0e1a\u0e31\u0e15\u0e34 List Tuple \u0e01\u0e32\u0e23\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32 \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32\u0e44\u0e14\u0e49 (Mutable) \u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e04\u0e48\u0e32\u0e44\u0e21\u0e48\u0e44\u0e14\u0e49 (Immutable) \u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 \u0e43\u0e0a\u0e49\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e48\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e40\u0e1b\u0e25\u0e35\u0e48\u0e22\u0e19\u0e41\u0e1b\u0e25\u0e07\u0e44\u0e14\u0e49 \u0e43\u0e0a\u0e49\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e04\u0e48\u0e32\u0e04\u0e07\u0e17\u0e35\u0e48 \u0e01\u0e32\u0e23\u0e40\u0e02\u0e35\u0e22\u0e19 <code>[]</code> (Square brackets) <code>()</code> (Parentheses)"},{"location":"python/lists_tuples/#slicing","title":"Slicing","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e01\u0e32\u0e23\u0e15\u0e31\u0e14\u0e41\u0e1a\u0e48\u0e07\u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e1a\u0e32\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e02\u0e2d\u0e07 <code>list</code> \u0e2b\u0e23\u0e37\u0e2d <code>tuple</code> \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49 \u0e0a\u0e48\u0e27\u0e07 index \u0e41\u0e25\u0e30\u0e21\u0e35\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a\u0e14\u0e31\u0e07\u0e19\u0e35\u0e49:</p> <pre><code>list[start:stop:step]\n</code></pre> <ul> <li>start: index \u0e02\u0e2d\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e27\u0e41\u0e23\u0e01\u0e17\u0e35\u0e48\u0e08\u0e30\u0e14\u0e36\u0e07\u0e2d\u0e2d\u0e01\u0e21\u0e32 (\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e04\u0e37\u0e2d 0)</li> <li>stop: index \u0e02\u0e2d\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e27\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\u0e17\u0e35\u0e48\u0e08\u0e30\u0e14\u0e36\u0e07\u0e2d\u0e2d\u0e01\u0e21\u0e32 (\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e04\u0e37\u0e2d index \u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22)</li> <li>step: \u0e23\u0e30\u0e1a\u0e38\u0e08\u0e33\u0e19\u0e27\u0e19\u0e02\u0e31\u0e49\u0e19\u0e17\u0e35\u0e48\u0e02\u0e49\u0e32\u0e21\u0e23\u0e30\u0e2b\u0e27\u0e48\u0e32\u0e07 index (\u0e04\u0e48\u0e32\u0e40\u0e23\u0e34\u0e48\u0e21\u0e15\u0e49\u0e19\u0e04\u0e37\u0e2d 1)</li> </ul> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 <pre><code>my_list = [1, 2, 3, 4, 5, 6, 7]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 1 \u0e16\u0e36\u0e07\u0e01\u0e48\u0e2d\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 4\nprint(my_list[1:4])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [2, 3, 4]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e49\u0e19\u0e08\u0e19\u0e16\u0e36\u0e07\u0e01\u0e48\u0e2d\u0e19\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 3\nprint(my_list[:3])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [1, 2, 3]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e15\u0e31\u0e49\u0e07\u0e41\u0e15\u0e48\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e17\u0e35\u0e48 2 \u0e44\u0e1b\u0e08\u0e19\u0e16\u0e36\u0e07\u0e2a\u0e38\u0e14\u0e17\u0e49\u0e32\u0e22\nprint(my_list[2:])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [3, 4, 5, 6, 7]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e17\u0e38\u0e01\u0e15\u0e31\u0e27\u0e40\u0e27\u0e49\u0e19 2 \u0e15\u0e31\u0e27\nprint(my_list[::2])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [1, 3, 5, 7]\n\n# \u0e14\u0e36\u0e07\u0e2a\u0e21\u0e32\u0e0a\u0e34\u0e01\u0e22\u0e49\u0e2d\u0e19\u0e01\u0e25\u0e31\u0e1a\nprint(my_list[::-1])\n# \u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c: [7, 6, 5, 4, 3, 2, 1]\n</code></pre></p>"},{"location":"python/loops/","title":"Loops","text":"<p>\u0e43\u0e19 python \u0e08\u0e30\u0e21\u0e35 loops 2 \u0e41\u0e1a\u0e1a\u0e04\u0e37\u0e2d <code>while</code> \u0e41\u0e25\u0e30 <code>for</code></p>"},{"location":"python/loops/#while","title":"while","text":"<p>while \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e07\u0e37\u0e48\u0e2d\u0e19\u0e44\u0e02\u0e17\u0e35\u0e48\u0e01\u0e33\u0e2b\u0e19\u0e14\u0e22\u0e31\u0e07\u0e04\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e08\u0e23\u0e34\u0e07 (True) \u0e42\u0e14\u0e22\u0e40\u0e2b\u0e21\u0e32\u0e30\u0e01\u0e31\u0e1a\u0e2a\u0e16\u0e32\u0e19\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e08\u0e33\u0e19\u0e27\u0e19\u0e23\u0e2d\u0e1a\u0e44\u0e21\u0e48\u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07  prints 0,1,2,3,4</p> <code>     # Prints out 0,1,2,3,4      count = 0     while count &lt; 5:         print(count)         count += 1  # This is the same as count = count + 1    </code>"},{"location":"python/loops/#for","title":"for","text":"<p>for \u0e43\u0e0a\u0e49\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e15\u0e32\u0e21\u0e08\u0e33\u0e19\u0e27\u0e19\u0e17\u0e35\u0e48\u0e41\u0e19\u0e48\u0e19\u0e2d\u0e19 \u0e2b\u0e23\u0e37\u0e2d\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e23\u0e32\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23 (\u0e40\u0e0a\u0e48\u0e19 list, string, range)</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07  prints 0,1,2,3,4</p> <code>     # Prints out 0,1,2,3,4      for num in range(0,5):         print(num)    </code>"},{"location":"python/loops/#for-with-dictionaries","title":"for with dictionaries","text":"<p>for \u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e02\u0e2d\u0e07 dict \u0e44\u0e14\u0e49 \u0e42\u0e14\u0e22\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e40\u0e02\u0e49\u0e32\u0e16\u0e36\u0e07\u0e40\u0e09\u0e1e\u0e32\u0e30 keys, values, \u0e2b\u0e23\u0e37\u0e2d\u0e17\u0e31\u0e49\u0e07 key-value \u0e04\u0e39\u0e48 \u0e42\u0e14\u0e22\u0e43\u0e0a\u0e49\u0e40\u0e21\u0e18\u0e2d\u0e14\u0e15\u0e48\u0e32\u0e07 \u0e46 \u0e40\u0e0a\u0e48\u0e19 .keys(), .values(), \u0e41\u0e25\u0e30 .items()</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e40\u0e09\u0e32\u0e30 keys</p> <code>     data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}      # \u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19 keys \u0e42\u0e14\u0e22\u0e15\u0e23\u0e07     for key in data:         print(key)      # \u0e2b\u0e23\u0e37\u0e2d\u0e43\u0e0a\u0e49 .keys() \u0e01\u0e47\u0e44\u0e14\u0e49     for key in data.keys():         print(key)   </code> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e40\u0e09\u0e32\u0e30 values</p> <code>     data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}      for value in data.values():         print(value)   </code> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e01\u0e32\u0e23\u0e27\u0e23\u0e0b\u0e49\u0e33\u0e17\u0e31\u0e49\u0e07 key \u0e41\u0e25\u0e30 value</p> <code>     data = {'name': 'Alice', 'age': 25, 'city': 'Bangkok'}      for key, value in data.items():         print(key, value)   </code>"},{"location":"python/loops/#enumerate","title":"enumerate","text":"<p>\u0e40\u0e1b\u0e47\u0e19\u0e1f\u0e31\u0e07\u0e01\u0e4c\u0e0a\u0e31\u0e19\u0e17\u0e35\u0e48\u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e40\u0e23\u0e32\u0e27\u0e19\u0e0b\u0e49\u0e33\u0e1c\u0e48\u0e32\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 (\u0e40\u0e0a\u0e48\u0e19 \u0e25\u0e34\u0e2a\u0e15\u0e4c, \u0e2a\u0e15\u0e23\u0e34\u0e07 \u0e2b\u0e23\u0e37\u0e2d tuple) \u0e42\u0e14\u0e22\u0e43\u0e2b\u0e49\u0e04\u0e48\u0e32\u0e14\u0e31\u0e0a\u0e19\u0e35 (index) \u0e41\u0e25\u0e30\u0e04\u0e48\u0e32\u0e02\u0e2d\u0e07\u0e2d\u0e07\u0e04\u0e4c\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a\u0e43\u0e19\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e19\u0e31\u0e49\u0e19\u0e1e\u0e23\u0e49\u0e2d\u0e21\u0e01\u0e31\u0e19\u0e43\u0e19\u0e01\u0e32\u0e23\u0e27\u0e19\u0e0b\u0e49\u0e33</p> <code>     fruits = ['apple', 'banana', 'cherry']      for index, fruit in enumerate(fruits):         print(index, fruit)    </code>"},{"location":"python/loops/#break-and-continue-statements","title":"\"break\" and \"continue\" statements","text":"<ul> <li>continue: \u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e02\u0e49\u0e32\u0e21\u0e44\u0e1b\u0e22\u0e31\u0e07\u0e23\u0e2d\u0e1a\u0e16\u0e31\u0e14\u0e44\u0e1b</li> <li>break: \u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e25\u0e39\u0e1b</li> </ul> <code>     fruits = ['apple', 'banana', 'cherry']      for num in range(10):         if num == 3:             continue         elif num == 6:             break          print(num)    </code>"},{"location":"python/loops/#loops-with-else","title":"loops with else","text":"<p>else \u0e08\u0e30\u0e17\u0e33\u0e07\u0e32\u0e19 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e25\u0e39\u0e1b\u0e17\u0e33\u0e07\u0e32\u0e19\u0e04\u0e23\u0e1a\u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e21\u0e35\u0e01\u0e32\u0e23 break else \u0e08\u0e30\u0e44\u0e21\u0e48\u0e17\u0e33\u0e07\u0e32\u0e19 \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e21\u0e35\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 break \u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e25\u0e39\u0e1b\u0e01\u0e48\u0e2d\u0e19\u0e04\u0e23\u0e1a</p> <code>     numbers = [1, 2, 3, 4, 5]     target = 7      for num in numbers:         if num == target:             print(\"\u0e1e\u0e1a\u0e04\u0e48\u0e32 \", target)             break     else:         print(\"\u0e44\u0e21\u0e48\u0e1e\u0e1a\u0e04\u0e48\u0e32 \", target)    </code>"},{"location":"python/unit_test/","title":"Unit test","text":"<p>Python \u0e21\u0e35\u0e42\u0e21\u0e14\u0e39\u0e25 unittest \u0e0b\u0e36\u0e48\u0e07\u0e40\u0e1b\u0e47\u0e19\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e40\u0e02\u0e35\u0e22\u0e19\u0e41\u0e25\u0e30\u0e23\u0e31\u0e19 unit test \u0e44\u0e14\u0e49\u0e07\u0e48\u0e32\u0e22</p> <p>\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07</p> <pre><code>project/\n\u251c\u2500\u2500 math_operations.py\n\u251c\u2500\u2500 test_math_operations.py\n</code></pre> math_operations.py<pre><code>def divide(a: int, b: int) -&gt; int:\n    if b == 0:\n        raise ValueError(\"\u0e44\u0e21\u0e48\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e2b\u0e32\u0e23\u0e14\u0e49\u0e27\u0e22\u0e28\u0e39\u0e19\u0e22\u0e4c\u0e44\u0e14\u0e49\")\n    return a / b\n</code></pre> test_math_operations.py<pre><code>import unittest\nimport math_operations\n\n\nclass TestMyModule(unittest.TestCase):\n    def test_given_dividend_and_non_zero_divisor_when_divided_then_correct_result_is_returned(self):\n        dividend = 20\n        divisor = 4\n\n        result = self.calculator.divide(dividend, divisor)\n\n        self.assertEqual(result, 5.0)\n\n    def test_given_divisor_is_zero_when_divided_then_value_error_is_raised(self):\n        dividend = 10\n        divisor = 0\n\n        with self.assertRaises(ValueError):\n            self.calculator.divide(dividend, divisor)\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> <p>\u0e16\u0e49\u0e32\u0e40\u0e23\u0e32\u0e23\u0e31\u0e19 file test  \u0e08\u0e30\u0e44\u0e14\u0e49\u0e1c\u0e25\u0e25\u0e31\u0e1e\u0e18\u0e4c\u0e40\u0e2b\u0e21\u0e37\u0e2d\u0e19\u0e43\u0e19\u0e23\u0e39\u0e1b</p> <p><pre><code>python test_math_operations\n</code></pre> </p>"},{"location":"python/virtual_environment/","title":"Virtual Environment","text":"<p>Virtual Environment \u0e2b\u0e23\u0e37\u0e2d \u0e2a\u0e20\u0e32\u0e1e\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21\u0e40\u0e2a\u0e21\u0e37\u0e2d\u0e19 \u0e43\u0e19 Python \u0e04\u0e37\u0e2d\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e43\u0e0a\u0e49\u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e22\u0e01\u0e2a\u0e20\u0e32\u0e1e\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21\u0e01\u0e32\u0e23\u0e1e\u0e31\u0e12\u0e19\u0e32 (development environment) \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e42\u0e1b\u0e23\u0e40\u0e08\u0e04\u0e2b\u0e19\u0e36\u0e48\u0e07\u0e46 \u0e42\u0e14\u0e22\u0e44\u0e21\u0e48\u0e43\u0e2b\u0e49\u0e01\u0e23\u0e30\u0e17\u0e1a\u0e01\u0e31\u0e1a\u0e23\u0e30\u0e1a\u0e1a Python \u0e2b\u0e23\u0e37\u0e2d\u0e42\u0e1b\u0e23\u0e40\u0e08\u0e04\u0e2d\u0e37\u0e48\u0e19\u0e17\u0e35\u0e48\u0e2d\u0e32\u0e08\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Python \u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19\u0e2d\u0e22\u0e39\u0e48 \u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49 Virtual Environment \u0e0a\u0e48\u0e27\u0e22\u0e43\u0e2b\u0e49\u0e04\u0e38\u0e13\u0e2a\u0e32\u0e21\u0e32\u0e23\u0e16\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e44\u0e25\u0e1a\u0e23\u0e32\u0e23\u0e35\u0e41\u0e25\u0e30\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e17\u0e35\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e41\u0e22\u0e01\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e01\u0e31\u0e19\u0e15\u0e32\u0e21\u0e42\u0e1b\u0e23\u0e40\u0e08\u0e04</p>"},{"location":"python/virtual_environment/#virtual-environment_1","title":"\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e41\u0e25\u0e30\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment","text":"<ul> <li> <p>\u0e01\u0e32\u0e23\u0e2a\u0e23\u0e49\u0e32\u0e07 Virtual Environment <pre><code>python -m venv .venv\n</code></pre></p> <ul> <li><code>.venv</code>: \u0e0a\u0e37\u0e48\u0e2d\u0e02\u0e2d\u0e07 Virtual Environment \u0e17\u0e35\u0e48\u0e08\u0e30\u0e16\u0e39\u0e01\u0e2a\u0e23\u0e49\u0e32\u0e07</li> </ul> </li> <li> <p>\u0e01\u0e32\u0e23\u0e40\u0e1b\u0e34\u0e14\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment</p> <ul> <li> <p>Windows: <pre><code>.venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>macOS \u0e2b\u0e23\u0e37\u0e2d Linux: <pre><code>source .venv/bin/activate\n</code></pre></p> </li> </ul> <p>\u0e40\u0e21\u0e37\u0e48\u0e2d\u0e40\u0e1b\u0e34\u0e14\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e41\u0e25\u0e49\u0e27\u0e08\u0e30\u0e40\u0e2b\u0e47\u0e19\u0e0a\u0e37\u0e48\u0e2d Virtual Environment \u0e41\u0e2a\u0e14\u0e07\u0e2d\u0e22\u0e39\u0e48\u0e43\u0e19 prompt \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e22\u0e37\u0e19\u0e22\u0e31\u0e19\u0e27\u0e48\u0e32\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment \u0e41\u0e25\u0e49\u0e27 (\u0e40\u0e0a\u0e48\u0e19 (.venv))</p> </li> <li> <p>\u0e01\u0e32\u0e23\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e44\u0e25\u0e1a\u0e23\u0e32\u0e23\u0e35\u0e43\u0e19 Virtual Environment <pre><code>pip install httpx\n</code></pre></p> </li> <li> <p>\u0e01\u0e32\u0e23\u0e22\u0e01\u0e40\u0e25\u0e34\u0e01\u0e01\u0e32\u0e23\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19 Virtual Environment <pre><code>deactivate\n</code></pre></p> </li> </ul>"},{"location":"python/virtual_environment/#dependencies","title":"\u0e40\u0e04\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e21\u0e37\u0e2d\u0e43\u0e19\u0e01\u0e32\u0e23\u0e08\u0e31\u0e14\u0e01\u0e32\u0e23 dependencies","text":"<ul> <li>poetry</li> <li>uv</li> </ul>"}]}